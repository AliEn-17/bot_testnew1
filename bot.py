import telebot
from telebot import types
import random

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
BOT_TOKEN = '–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨'
# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π ID –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
ADMIN_ID = 123456789 

bot = telebot.TeleBot(BOT_TOKEN)

# --- –î–ê–ù–ù–´–ï –®–ö–û–õ–´ ---

SCHOOL_NAME = "–ê–∫–∞–¥–µ–º–∏—è '–ü–∏—Ç–æ–Ω—á–∏–∫–∏'"
SCHOOL_MOTTO = "–ö–æ–¥–∏–º –±—É–¥—É—â–µ–µ –≤–º–µ—Å—Ç–µ!"

SCHEDULE = {
    "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫": "10:00 - Python –ë–∞–∑–æ–≤—ã–π, 18:00 - HTML/CSS –ü—Ä–∞–∫—Ç–∏–∫–∞",
    "–í—Ç–æ—Ä–Ω–∏–∫": "14:00 - JavaScript –û—Å–Ω–æ–≤—ã",
    "–°—Ä–µ–¥–∞": "10:00 - Python –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π, 18:00 - Figma –¥–ª—è –í–µ–±–∞",
    "–ß–µ—Ç–≤–µ—Ä–≥": "14:00 - –ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ –°—Ç—Ä—É–∫—Ç—É—Ä—ã –î–∞–Ω–Ω—ã—Ö",
    "–ü—è—Ç–Ω–∏—Ü–∞": "12:00 - QA –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–°–≤–æ–±–æ–¥–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞)",
    "–°—É–±–±–æ—Ç–∞": "11:00 - English for IT",
    "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ": "–í—ã—Ö–æ–¥–Ω–æ–π! üßò‚Äç‚ôÇÔ∏è",
}

# --- –ò–ù–¢–ï–†–§–ï–ô–° (–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è 1 –∏ 4) ---

def main_keyboard():
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    
    # –¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ 2: –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    btn1 = types.KeyboardButton("üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤") 
    
    btn2 = types.KeyboardButton("üìö –ú–æ–∏ –∫—É—Ä—Å—ã")
    btn3 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    btn4 = types.KeyboardButton("üåü –°–æ–≤–µ—Ç –¥–Ω—è")
    
    markup.add(btn1, btn2)
    markup.add(btn3, btn4)
    return markup

def schedule_inline_keyboard():
    """–ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é."""
    markup = types.InlineKeyboardMarkup(row_width=2)
    buttons = []
    days_order = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞"]
    
    for day in days_order:
        buttons.append(types.InlineKeyboardButton(f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day[:3]}.", callback_data=f"schedule_{day}"))
        
    markup.add(*buttons)
    markup.add(types.InlineKeyboardButton("–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="schedule_all"))
    return markup

# --- –•–≠–ù–î–õ–ï–†–´ –ö–û–ú–ê–ù–î ---

@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è."""
    user = message.from_user.first_name if message.from_user.first_name else "–°—Ç—É–¥–µ–Ω—Ç"
    
    welcome_text = (
        f"ü§ñ **–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ {SCHOOL_NAME}, {user}!** üéâ\n\n"
        f"–ù–∞—à –¥–µ–≤–∏–∑: *{SCHOOL_MOTTO}*\n\n"
        "–Ø –≤–∞—à –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )
    
    bot.send_message(
        message.chat.id, 
        welcome_text, 
        parse_mode='Markdown', 
        reply_markup=main_keyboard()
    )

@bot.message_handler(commands=['admin_info'])
def send_admin_info(message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è ADMIN_ID)."""
    if message.from_user.id == ADMIN_ID:
        info_text = (
            "**üõ†Ô∏è –ü–∞–Ω–µ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞**\n"
            "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ "
            "–∏–ª–∏ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–µ—Å–ª–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ).\n"
            f"–¢–µ–∫—É—â–∏–π —Ç–æ–∫–µ–Ω: `{BOT_TOKEN[:10]}...`\n"
            "–í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ ('–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å') –ø–µ—Ä–µ—Å—ã–ª–∞—é—Ç—Å—è –≤–∞–º."
        )
        bot.send_message(message.chat.id, info_text, parse_mode='Markdown')
    else:
        bot.send_message(message.chat.id, "–≠–π, —ç—Ç–æ —Å–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! üòâ")

# --- –•–≠–ù–î–õ–ï–†–´ –ö–ù–û–ü–û–ö REPLY KEYBOARD ---

@bot.message_handler(func=lambda message: message.text == "üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤")
def handle_schedule_start(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ."""
    bot.send_message(
        message.chat.id, 
        "–û—Ç–ª–∏—á–Ω–æ! –ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ?", 
        reply_markup=schedule_inline_keyboard()
    )

@bot.message_handler(func=lambda message: message.text == "üìö –ú–æ–∏ –∫—É—Ä—Å—ã")
def handle_my_courses(message):
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–¥–µ–ª–∞ –ú–æ–∏ –∫—É—Ä—Å—ã."""
    text = (
        "–ü–æ–∫–∞ —á—Ç–æ —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–æ —Å–∫–æ—Ä–æ –∑–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è:\n"
        "1. –°—Å—ã–ª–∫–∏ –Ω–∞ Zoom/Google Meet.\n"
        "2. –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è.\n"
        "3. –ú–∞—Ç–µ—Ä–∏–∞–ª—ã —É—Ä–æ–∫–æ–≤.\n\n"
        "–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ –∞–Ω–æ–Ω—Å—ã! üöÄ"
    )
    bot.send_message(message.chat.id, text, parse_mode='Markdown')

@bot.message_handler(func=lambda message: message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
def handle_question_request(message):
    """–ó–∞–ø—Ä–æ—Å –Ω–∞ —Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."""
    msg = bot.send_message(
        message.chat.id, 
        "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É. –Ø –ø–µ—Ä–µ—à–ª—é –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
        reply_markup=types.ReplyKeyboardRemove()
    )
    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.register_next_step_handler(msg, forward_question_to_admin)

def forward_question_to_admin(message):
    """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    if message.text:
        user_info = f"–û—Ç: @{message.from_user.username} (ID: `{message.from_user.id}`)\n" if message.from_user.username else f"–û—Ç: {message.from_user.first_name} (ID: `{message.from_user.id}`)\n"
        
        admin_message = (
            f"üö® **–ù–û–í–´–ô –í–û–ü–†–û–° –û–¢ –°–¢–£–î–ï–ù–¢–ê** üö®\n\n"
            f"{user_info}"
            f"**–í–æ–ø—Ä–æ—Å:** {message.text}"
        )
        
        # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        bot.send_message(
            ADMIN_ID, 
            admin_message, 
            parse_mode='Markdown'
        )
        
        bot.send_message(
            message.chat.id, 
            "‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º! –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.",
            reply_markup=main_keyboard()
        )
    else:
        # –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ –Ω–µ —Ç–µ–∫—Å—Ç (—Ñ–æ—Ç–æ, —Å—Ç–∏–∫–µ—Ä –∏ —Ç.–¥.)
        bot.send_message(
            message.chat.id, 
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º.",
            reply_markup=main_keyboard()
        )

@bot.message_handler(func=lambda message: message.text == "üåü –°–æ–≤–µ—Ç –¥–Ω—è")
def handle_tip_of_day(message):
    """–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–æ–≤–µ—Ç –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ (–¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ: —Å–¥–µ–ª–∞—Ç—å –±–æ—Ç–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º)."""
    tips = [
        "–ù–µ –ø—ã—Ç–∞–π—Ç–µ—Å—å –∑–∞–ø–æ–º–Ω–∏—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –ø—ã—Ç–∞–π—Ç–µ—Å—å –ø–æ–Ω—è—Ç—å *–ª–æ–≥–∏–∫—É*.",
        "–õ—É—á—à–∏–π —Å–ø–æ—Å–æ–± —É—á–∏—Ç—å—Å—è ‚Äî —ç—Ç–æ *—É—á–∏—Ç—å* –¥—Ä—É–≥–∏—Ö.",
        "–ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ –≤—ã —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç–µ—Å—å —Å –æ—à–∏–±–∫–æ–π, –≤—ã —Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å *–ª—É—á—à–µ*.",
        "–ü–µ–π—Ç–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–¥—ã –∏ –¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤—ã! –í–∞—à –º–æ–∑–≥ —Å–∫–∞–∂–µ—Ç –≤–∞–º —Å–ø–∞—Å–∏–±–æ. üß†",
        "–°–æ–∑–¥–∞–π—Ç–µ pet-–ø—Ä–æ–µ–∫—Ç! –ù–∞—á–∞—Ç—å —á—Ç–æ-—Ç–æ —Å–≤–æ–µ ‚Äî —ç—Ç–æ *—Å–∞–º–æ–µ* –º–æ—Ç–∏–≤–∏—Ä—É—é—â–µ–µ.",
        "–°–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å —Ö–æ—Ä–æ—à–∞ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã, –Ω–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å ‚Äî —ç—Ç–æ –∫–ª—é—á –∫ –º–∞—Å—à—Ç–∞–±—É! üòâ",
    ]
    bot.send_message(
        message.chat.id, 
        f"‚ú® **–°–û–í–ï–¢ –î–ù–Ø:** {random.choice(tips)}",
        parse_mode='Markdown'
    )


# --- –•–≠–ù–î–õ–ï–†–´ INLINE –ö–ù–û–ü–û–ö ---

@bot.callback_query_handler(func=lambda call: call.data.startswith('schedule_'))
def callback_schedule(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è."""
    day_key = call.data.replace('schedule_', '')
    response_text = ""
    
    if day_key == "all":
        response_text = "**–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ê–∫–∞–¥–µ–º–∏–∏** üóìÔ∏è\n\n"
        for day, lesson in SCHEDULE.items():
            response_text += f"**{day}:** {lesson}\n"
        response_text += "\n*–£—Å–ø–µ—à–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è!*"
        
        # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ –≤—Å–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=response_text,
            parse_mode='Markdown',
            reply_markup=None # –£–¥–∞–ª—è–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        )
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å
        lesson = SCHEDULE.get(day_key, "–ó–∞–Ω—è—Ç–∏—è –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã.")
        response_text = f"**–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day_key}:**\n{lesson}"
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–∏—Ö –¥–Ω–µ–π
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=response_text,
            parse_mode='Markdown',
            reply_markup=schedule_inline_keyboard() 
        )
        
    bot.answer_callback_query(call.id)


# --- –ó–ê–ü–£–°–ö –ë–û–¢–ê ---
if __name__ == '__main__':
    print(f"–ë–æ—Ç {SCHOOL_NAME} –∑–∞–ø—É—â–µ–Ω (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π polling).")
    try:
        # none_stop=True –ø–æ–∑–≤–æ–ª—è–µ—Ç –±–æ—Ç—É –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç—É
        bot.polling(none_stop=True, interval=0) 
    except Exception as e:
        print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
